<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexander C. Hungerford</title>
    <link>/</link>
    <description>Recent content on Alexander C. Hungerford</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tidy Tuesday pt 1</title>
      <link>/blog/2020-12-06-tidy-tuesday-pt-1/</link>
      <pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2020-12-06-tidy-tuesday-pt-1/</guid>
      <description>Setuplibrary(tidyverse)## -- Attaching packages --------------------------------------- tidyverse 1.3.0 --## v ggplot2 3.3.2 v purrr 0.3.4## v tibble 3.0.4 v dplyr 1.0.2## v tidyr 1.1.2 v stringr 1.4.0## v readr 1.4.0 v forcats 0.5.0## -- Conflicts ------------------------------------------ tidyverse_conflicts() --## x dplyr::filter() masks stats::filter()## x dplyr::lag() masks stats::lag()Load datamtcars_tbl &amp;lt;- tibble(mtcars)mtcars_tbl## # A tibble: 32 x 11## mpg cyl disp hp drat wt qsec vs am gear carb## &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;## 1 21 6 160 110 3.</description>
    </item>
    
    <item>
      <title>Create a Histogram in R with ggplot2</title>
      <link>/blog/2020-12-03-create-a-histogram-in-r-with-ggplot2/</link>
      <pubDate>Thu, 03 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2020-12-03-create-a-histogram-in-r-with-ggplot2/</guid>
      <description>OBJECTIVE: Demonstrate the basics of visualizing data from my fantasy football league using the ggplot2 package from the Tidyverse.
Setuplibrary(tidyverse)## -- Attaching packages --------------------------------------- tidyverse 1.3.0 --## v ggplot2 3.3.2 v purrr 0.3.4## v tibble 3.0.4 v dplyr 1.0.2## v tidyr 1.1.2 v stringr 1.4.0## v readr 1.4.0 v forcats 0.5.0## -- Conflicts ------------------------------------------ tidyverse_conflicts() --## x dplyr::filter() masks stats::filter()## x dplyr::lag() masks stats::lag()Import Datagm &amp;lt;- c(&amp;quot;Alex&amp;quot;, &amp;quot;Ashton&amp;quot;, &amp;quot;Mik&amp;quot;, &amp;quot;Katz&amp;quot;, &amp;quot;Dave&amp;quot;, &amp;quot;Brett&amp;quot;, &amp;quot;Ian&amp;quot;, &amp;quot;Jack&amp;quot;, &amp;quot;Jon&amp;quot;, &amp;quot;Chris&amp;quot;, &amp;quot;Todd&amp;quot;, &amp;quot;Nate&amp;quot;)# years league has been activeyear &amp;lt;- c(2012:2019)# podium placement in order by yearfirst &amp;lt;- c(&amp;quot;Mik&amp;quot;, &amp;quot;Nate&amp;quot;, &amp;quot;Nate&amp;quot;, &amp;quot;Chris&amp;quot;, &amp;quot;Nate&amp;quot;, &amp;quot;Nate&amp;quot;, &amp;quot;Dave&amp;quot;, &amp;quot;Dave&amp;quot;)second &amp;lt;- c(&amp;quot;Jon&amp;quot;, &amp;quot;Alex&amp;quot;, &amp;quot;Ian&amp;quot;, &amp;quot;Todd&amp;quot;, &amp;quot;Jon&amp;quot;, &amp;quot;Chris&amp;quot;, &amp;quot;Jon&amp;quot;, &amp;quot;Jon&amp;quot;)third &amp;lt;- c(&amp;quot;Katz&amp;quot;, &amp;quot;Katz&amp;quot;, &amp;quot;Jack&amp;quot;, &amp;quot;Dave&amp;quot;, &amp;quot;Katz&amp;quot;, &amp;quot;Katz&amp;quot;, &amp;quot;Chris&amp;quot;, &amp;quot;Todd&amp;quot;)podium &amp;lt;- tibble(year, first, second, third)# count Top 3 finishes by GMspodium_count &amp;lt;- podium %&amp;gt;%pivot_longer(cols = -year,values_to = &amp;#39;GM&amp;#39;) %&amp;gt;%count(name, GM) %&amp;gt;%pivot_wider(names_from = name, values_from = n, values_fill = list(n = 0))podium_count## # A tibble: 10 x 4## GM first second third## &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;## 1 Chris 1 1 1## 2 Dave 2 0 1## 3 Mik 1 0 0## 4 Nate 4 0 0## 5 Alex 0 1 0## 6 Ian 0 1 0## 7 Jon 0 4 0## 8 Todd 0 1 1## 9 Jack 0 0 1## 10 Katz 0 0 4ggplot(podium_count, aes(x = GM)) + geom_bar()</description>
    </item>
    
    <item>
      <title>Columns &amp; Rows: select, filter, mutate</title>
      <link>/blog/2020-12-02-test-post-1-tidy-data/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2020-12-02-test-post-1-tidy-data/</guid>
      <description>OBJECTIVE: Demonstrate how to create and manipulate data with R and the Tidyverse using data from my fantasy football league.
Add columns and change values with mutate()Choose columns with select()Choose rows with filter()Manipulate data with pivot_longer() &amp;amp; pivot_wider()Setuplibrary(tidyverse)## -- Attaching packages --------------------------------------- tidyverse 1.3.0 --## v ggplot2 3.3.2 v purrr 0.3.4## v tibble 3.0.4 v dplyr 1.0.2## v tidyr 1.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>/blog/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/blog/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/blog/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/hugoisforlovers/</guid>
      <description>&lt;h2 id=&#34;step-1-install-hugo&#34;&gt;Step 1. Install Hugo&lt;/h2&gt;
&lt;p&gt;Go to &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;hugo releases&lt;/a&gt; and download the
appropriate version for your os and architecture.&lt;/p&gt;
&lt;p&gt;Save it somewhere specific as we will be using it in the next step.&lt;/p&gt;
&lt;p&gt;More complete instructions are available at &lt;a href=&#34;/overview/installing/&#34;&gt;installing hugo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>/blog/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/migrate-from-jekyll/</guid>
      <description>&lt;h2 id=&#34;move-static-content-to-static&#34;&gt;Move static content to &lt;code&gt;static&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Jekyll has a rule that any directory not starting with &lt;code&gt;_&lt;/code&gt; will be copied as-is to the &lt;code&gt;_site&lt;/code&gt; output. Hugo keeps all static content under &lt;code&gt;static&lt;/code&gt;. You should therefore move it all there.
With Jekyll, something that looked like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/
    ▾ images/
        logo.png
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
